{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"pwn exp": {
		"prefix": ["exp.pwn", "pwn"],
		"body": [
			"#!/usr/bin/env python",
			"# -*- coding: utf-8 -*-\n",
			
			"'''",
			"# Created on $CURRENT_MONTH_NAME_SHORT-$CURRENT_DATE-$CURRENT_YEAR_SHORT $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"# $TM_FILENAME",
			"# @author: Kyle - https://sky-bro.github.io",
			"'''",

			"\nfrom pwn import *",
			"from LibcSearcher import *",

			"\n##################### context ########################",
			"exe = context.binary = ELF('${1:./main}')",
			"context.terminal = ['tmux', 'sp', '-h', '-p', '60']",
			"# context.terminal = ['gnome-terminal', '-x', 'sh', '-c']",
			"context.log_level = 'warn' # 'CRITICAL', 'DEBUG', 'ERROR', 'INFO', 'NOTSET', 'WARN', 'WARNING'",
			
			"\n##################### io ########################",
			"gdbscript = '''",
			"tbreak main",
			"continue",
			"'''.format(**locals())",

			"\ndef start(argv=[], *a, **kw):",
			"\t'''Start the exploit against the target.'''",
			"\tif args.GDB:",
        "\t\treturn gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)",
    	"\telse:",
				"\t\treturn process([exe.path] + argv, *a, **kw)",
			
			"\n##################################################",
			"##################### exp ########################",
			"##################################################",

			"\nio = start()",

			"\n${0:io.send(asm(shellcraft.sh()))}",

			"\nio.interactive()\n"
		],
		"description": "pwn exploitation boilerplate"
	}
}